
Mech-Lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000cae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c3a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000086  00800100  00800100  00000cae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014a1  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a47  00000000  00000000  00002301  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000931  00000000  00000000  00002d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  0000367c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000638  00000000  00000000  00003914  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009fa  00000000  00000000  00003f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00004946  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
   8:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
   c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  1c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  2c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  38:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  48:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  50:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <pow+0x9c>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
  f6:	11 e0       	ldi	r17, 0x01	; 1
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	ea e3       	ldi	r30, 0x3A	; 58
  fe:	fc e0       	ldi	r31, 0x0C	; 12
 100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
 102:	05 90       	lpm	r0, Z+
 104:	0d 92       	st	X+, r0
 106:	a0 30       	cpi	r26, 0x00	; 0
 108:	b1 07       	cpc	r27, r17
 10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
 10c:	21 e0       	ldi	r18, 0x01	; 1
 10e:	a0 e0       	ldi	r26, 0x00	; 0
 110:	b1 e0       	ldi	r27, 0x01	; 1
 112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
 114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
 116:	a6 38       	cpi	r26, 0x86	; 134
 118:	b2 07       	cpc	r27, r18
 11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
 11c:	0e 94 30 01 	call	0x260	; 0x260 <main>
 120:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <_exit>

00000124 <__bad_interrupt>:
 124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <digital_filter_init>:
 128:	cf 92       	push	r12
 12a:	df 92       	push	r13
 12c:	ef 92       	push	r14
 12e:	ff 92       	push	r15
 130:	6b 01       	movw	r12, r22
 132:	7c 01       	movw	r14, r24
 134:	84 e4       	ldi	r24, 0x44	; 68
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	0e 94 48 02 	call	0x490	; 0x490 <rb_initialize_F>
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	0e 94 48 02 	call	0x490	; 0x490 <rb_initialize_F>
 144:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <i>
 148:	b7 01       	movw	r22, r14
 14a:	a6 01       	movw	r20, r12
 14c:	84 e4       	ldi	r24, 0x44	; 68
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <rb_push_front_F>
 154:	b7 01       	movw	r22, r14
 156:	a6 01       	movw	r20, r12
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <rb_push_front_F>
 160:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <i>
 164:	8f 5f       	subi	r24, 0xFF	; 255
 166:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <i>
 16a:	88 30       	cpi	r24, 0x08	; 8
 16c:	68 f3       	brcs	.-38     	; 0x148 <digital_filter_init+0x20>
 16e:	ff 90       	pop	r15
 170:	ef 90       	pop	r14
 172:	df 90       	pop	r13
 174:	cf 90       	pop	r12
 176:	08 95       	ret

00000178 <USART_Init>:
	for(uint8_t i = 0; i < 4; i++){ //for 4 bytes
		while(!(NEW_MSG)); //wait for new byte
		a.asChar[i] = receive_byte(); //collect byte
	}
	return a.asFloat; //return float value
}
 178:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 17c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 180:	88 e1       	ldi	r24, 0x18	; 24
 182:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 186:	86 e0       	ldi	r24, 0x06	; 6
 188:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 18c:	08 95       	ret

0000018e <print_byte>:


void print_byte(uint8_t value){
	//while(!(UCSR0A & (1<<UDRE0)));
	while(!(TRANSMIT_READY)); //after transmit line is ready
 18e:	e0 ec       	ldi	r30, 0xC0	; 192
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	90 81       	ld	r25, Z
 194:	95 ff       	sbrs	r25, 5
 196:	fd cf       	rjmp	.-6      	; 0x192 <print_byte+0x4>
	UDR0 = value; //set transmit register to value
 198:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 19c:	08 95       	ret

0000019e <print_float>:
}

void print_float(float value){ 
 19e:	ef 92       	push	r14
 1a0:	ff 92       	push	r15
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <print_float+0xe>
 1ac:	00 d0       	rcall	.+0      	; 0x1ae <print_float+0x10>
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62
	union floatChars b; //create helper union instance
	b.asFloat = value; //set float value
 1b2:	69 83       	std	Y+1, r22	; 0x01
 1b4:	7a 83       	std	Y+2, r23	; 0x02
 1b6:	8b 83       	std	Y+3, r24	; 0x03
 1b8:	9c 83       	std	Y+4, r25	; 0x04
 1ba:	8e 01       	movw	r16, r28
 1bc:	0f 5f       	subi	r16, 0xFF	; 255
 1be:	1f 4f       	sbci	r17, 0xFF	; 255
 1c0:	7e 01       	movw	r14, r28
 1c2:	85 e0       	ldi	r24, 0x05	; 5
 1c4:	e8 0e       	add	r14, r24
 1c6:	f1 1c       	adc	r15, r1
	for(uint8_t i = 0; i < 4; i++){ //for 4 bytes
		print_byte(b.asChar[i]); //send each byte
 1c8:	f8 01       	movw	r30, r16
 1ca:	81 91       	ld	r24, Z+
 1cc:	8f 01       	movw	r16, r30
 1ce:	0e 94 c7 00 	call	0x18e	; 0x18e <print_byte>
}

void print_float(float value){ 
	union floatChars b; //create helper union instance
	b.asFloat = value; //set float value
	for(uint8_t i = 0; i < 4; i++){ //for 4 bytes
 1d2:	0e 15       	cp	r16, r14
 1d4:	1f 05       	cpc	r17, r15
 1d6:	c1 f7       	brne	.-16     	; 0x1c8 <print_float+0x2a>
		print_byte(b.asChar[i]); //send each byte
	}
}
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	df 91       	pop	r29
 1e2:	cf 91       	pop	r28
 1e4:	1f 91       	pop	r17
 1e6:	0f 91       	pop	r16
 1e8:	ff 90       	pop	r15
 1ea:	ef 90       	pop	r14
 1ec:	08 95       	ret

000001ee <timer0_init>:
}

void timer0_init()
{	
	// enable CTC for Timer0
	TCCR0A |= (1 << WGM01);
 1ee:	84 b5       	in	r24, 0x24	; 36
 1f0:	82 60       	ori	r24, 0x02	; 2
 1f2:	84 bd       	out	0x24, r24	; 36
	// enable prescaler of 1024 for Timer0
	TCCR0B |= (1 << CS02)|(1 << CS00);	
 1f4:	85 b5       	in	r24, 0x25	; 37
 1f6:	85 60       	ori	r24, 0x05	; 5
 1f8:	85 bd       	out	0x25, r24	; 37
	// initialize counter to zero
	TCNT0 = 0;	
 1fa:	16 bc       	out	0x26, r1	; 38
	// initialize compare value for CTC
	OCR0A = 155;
 1fc:	8b e9       	ldi	r24, 0x9B	; 155
 1fe:	87 bd       	out	0x27, r24	; 39
 200:	08 95       	ret

00000202 <timer1_init>:
}

void timer1_init()
{
	TCCR1A |= 0;
 202:	e0 e8       	ldi	r30, 0x80	; 128
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	80 83       	st	Z, r24
	// Enable CTC for Timer1 with no prescaler
	TCCR1B |= (1 << WGM12)|(1 << CS10);
 20a:	e1 e8       	ldi	r30, 0x81	; 129
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	89 60       	ori	r24, 0x09	; 9
 212:	80 83       	st	Z, r24
	// initialize counter to zero
	TCNT1 = 0;	
 214:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 218:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	// initialize compare value
	OCR1B = 15999;
 21c:	8f e7       	ldi	r24, 0x7F	; 127
 21e:	9e e3       	ldi	r25, 0x3E	; 62
 220:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
 224:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
 228:	08 95       	ret

0000022a <adc_init>:


void adc_init() {
	
	//Set reference to built in channels
	ADMUX = (1<<REFS0);
 22a:	80 e4       	ldi	r24, 0x40	; 64
 22c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	//Enable ADC w/  prescaler
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 230:	87 e8       	ldi	r24, 0x87	; 135
 232:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 236:	08 95       	ret

00000238 <adc_read>:

uint16_t adc_read(uint8_t ch)
{
	//select channel to read
	ch &= 0b00000111;
	ADMUX = (ADMUX & 0xF8)|ch;	
 238:	ec e7       	ldi	r30, 0x7C	; 124
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	90 81       	ld	r25, Z
 23e:	98 7f       	andi	r25, 0xF8	; 248
 240:	87 70       	andi	r24, 0x07	; 7
 242:	89 2b       	or	r24, r25
 244:	80 83       	st	Z, r24
	//start conversion
	ADCSRA |= (1<<ADSC);	
 246:	ea e7       	ldi	r30, 0x7A	; 122
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	80 64       	ori	r24, 0x40	; 64
 24e:	80 83       	st	Z, r24
	//wait for conversion to complete
	while(ADCSRA & (1<<ADSC));	
 250:	80 81       	ld	r24, Z
 252:	86 fd       	sbrc	r24, 6
 254:	fd cf       	rjmp	.-6      	; 0x250 <adc_read+0x18>
	//return result
	return (ADC);
 256:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 25a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 25e:	08 95       	ret

00000260 <main>:
void adc_init();
uint16_t adc_read(uint8_t ch);


int main(void)
{
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	cd b7       	in	r28, 0x3d	; 61
 266:	de b7       	in	r29, 0x3e	; 62
 268:	c4 55       	subi	r28, 0x54	; 84
 26a:	d1 09       	sbc	r29, r1
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
	struct Ring_Buffer_F input_queue;
	struct Ring_Buffer_C output_queue;
	USART_Init(MYUBRR);
 276:	87 e6       	ldi	r24, 0x67	; 103
 278:	0e 94 bc 00 	call	0x178	; 0x178 <USART_Init>
	rb_initialize_F(&input_queue);
 27c:	ce 01       	movw	r24, r28
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	0e 94 48 02 	call	0x490	; 0x490 <rb_initialize_F>
    rb_initialize_C(&output_queue);
 284:	ce 01       	movw	r24, r28
 286:	8d 5b       	subi	r24, 0xBD	; 189
 288:	9f 4f       	sbci	r25, 0xFF	; 255
 28a:	0e 94 4f 02 	call	0x49e	; 0x49e <rb_initialize_C>
	//union floatChar filteredVel;

	timer0_init();
 28e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <timer0_init>
	timer1_init();
 292:	0e 94 01 01 	call	0x202	; 0x202 <timer1_init>
	adc_init();
 296:	0e 94 15 01 	call	0x22a	; 0x22a <adc_init>
	
	//Set AI0 to Output and rest as Input
	DDRC |= 0b00000001;
 29a:	38 9a       	sbi	0x07, 0	; 7
	
	//Set output to 1 to power sensor
	PORTC |= 0b00000001;
 29c:	40 9a       	sbi	0x08, 0	; 8
	float sampPer = 1000;
	float volt = 0;
	float angPos = 0;
	float angPosLast = 0;
	float angVel = 0;
	float filteredVel = 0;
 29e:	81 2c       	mov	r8, r1
 2a0:	91 2c       	mov	r9, r1
 2a2:	54 01       	movw	r10, r8
	
	//Sampling frequency for converting to velocity, 1/0.001
	float sampPer = 1000;
	float volt = 0;
	float angPos = 0;
	float angPosLast = 0;
 2a4:	10 e0       	ldi	r17, 0x00	; 0
 2a6:	00 e0       	ldi	r16, 0x00	; 0
 2a8:	31 2c       	mov	r3, r1
 2aa:	21 2c       	mov	r2, r1
	float angVel = 0;
	float filteredVel = 0;
    while (1) 
    {
		//if TIMER0_flag
		if((TIFR0 & (1 << OCF0A)))
 2ac:	a9 9b       	sbis	0x15, 1	; 21
 2ae:	05 c0       	rjmp	.+10     	; 0x2ba <main+0x5a>
		{
			/*for(int i=0; i <4; i++){
				rb_push_back_C(&output_queue, filteredVel.asChars[i]);
			}*/
			print_float(filteredVel); //edit so we don't drop readings during prints
 2b0:	c5 01       	movw	r24, r10
 2b2:	b4 01       	movw	r22, r8
 2b4:	0e 94 cf 00 	call	0x19e	; 0x19e <print_float>
			//reset TIMER0_flag
			TIFR0 |= (1 << OCF0A);
 2b8:	a9 9a       	sbi	0x15, 1	; 21
		}
		//if TIMER1_flag
		if((TIFR1 & (1 << OCF1A)))
 2ba:	b1 9b       	sbis	0x16, 1	; 22
 2bc:	d9 c0       	rjmp	.+434    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
		{
			//read voltage 
			volt = adc_read(1);	
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	0e 94 1c 01 	call	0x238	; 0x238 <adc_read>
 2c4:	bc 01       	movw	r22, r24
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 29 03 	call	0x652	; 0x652 <__floatunsisf>
 2ce:	6b 01       	movw	r12, r22
 2d0:	7c 01       	movw	r14, r24
			//convert to position in radians
			//inefficient
			angPos = abs((-1.0193E-13)*(pow(volt,6)) + (3.0609E-10)*(pow(volt,5)) + (-3.5356E-7)*(pow(volt,4)) + (1.9698E-4)*(pow(volt,3)) + -0.0543*(pow(volt,2)) + 7.2116*volt + (-354.5305)); 
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	40 ec       	ldi	r20, 0xC0	; 192
 2d8:	50 e4       	ldi	r21, 0x40	; 64
 2da:	0e 94 24 04 	call	0x848	; 0x848 <pow>
 2de:	4b 01       	movw	r8, r22
 2e0:	5c 01       	movw	r10, r24
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	40 ea       	ldi	r20, 0xA0	; 160
 2e8:	50 e4       	ldi	r21, 0x40	; 64
 2ea:	c7 01       	movw	r24, r14
 2ec:	b6 01       	movw	r22, r12
 2ee:	0e 94 24 04 	call	0x848	; 0x848 <pow>
 2f2:	2b 01       	movw	r4, r22
 2f4:	3c 01       	movw	r6, r24
 2f6:	20 e0       	ldi	r18, 0x00	; 0
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	40 e8       	ldi	r20, 0x80	; 128
 2fc:	50 e4       	ldi	r21, 0x40	; 64
 2fe:	c7 01       	movw	r24, r14
 300:	b6 01       	movw	r22, r12
 302:	0e 94 24 04 	call	0x848	; 0x848 <pow>
 306:	61 96       	adiw	r28, 0x11	; 17
 308:	6c af       	std	Y+60, r22	; 0x3c
 30a:	7d af       	std	Y+61, r23	; 0x3d
 30c:	8e af       	std	Y+62, r24	; 0x3e
 30e:	9f af       	std	Y+63, r25	; 0x3f
 310:	61 97       	sbiw	r28, 0x11	; 17
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	40 e4       	ldi	r20, 0x40	; 64
 318:	50 e4       	ldi	r21, 0x40	; 64
 31a:	c7 01       	movw	r24, r14
 31c:	b6 01       	movw	r22, r12
 31e:	0e 94 24 04 	call	0x848	; 0x848 <pow>
 322:	65 96       	adiw	r28, 0x15	; 21
 324:	6c af       	std	Y+60, r22	; 0x3c
 326:	7d af       	std	Y+61, r23	; 0x3d
 328:	8e af       	std	Y+62, r24	; 0x3e
 32a:	9f af       	std	Y+63, r25	; 0x3f
 32c:	65 97       	sbiw	r28, 0x15	; 21
 32e:	25 ea       	ldi	r18, 0xA5	; 165
 330:	36 e8       	ldi	r19, 0x86	; 134
 332:	45 ee       	ldi	r20, 0xE5	; 229
 334:	59 ea       	ldi	r21, 0xA9	; 169
 336:	c5 01       	movw	r24, r10
 338:	b4 01       	movw	r22, r8
 33a:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 33e:	4b 01       	movw	r8, r22
 340:	5c 01       	movw	r10, r24
 342:	26 e5       	ldi	r18, 0x56	; 86
 344:	36 e4       	ldi	r19, 0x46	; 70
 346:	48 ea       	ldi	r20, 0xA8	; 168
 348:	5f e2       	ldi	r21, 0x2F	; 47
 34a:	c3 01       	movw	r24, r6
 34c:	b2 01       	movw	r22, r4
 34e:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 352:	9b 01       	movw	r18, r22
 354:	ac 01       	movw	r20, r24
 356:	c5 01       	movw	r24, r10
 358:	b4 01       	movw	r22, r8
 35a:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 35e:	4b 01       	movw	r8, r22
 360:	5c 01       	movw	r10, r24
 362:	2b ee       	ldi	r18, 0xEB	; 235
 364:	30 ed       	ldi	r19, 0xD0	; 208
 366:	4d eb       	ldi	r20, 0xBD	; 189
 368:	54 eb       	ldi	r21, 0xB4	; 180
 36a:	61 96       	adiw	r28, 0x11	; 17
 36c:	6c ad       	ldd	r22, Y+60	; 0x3c
 36e:	7d ad       	ldd	r23, Y+61	; 0x3d
 370:	8e ad       	ldd	r24, Y+62	; 0x3e
 372:	9f ad       	ldd	r25, Y+63	; 0x3f
 374:	61 97       	sbiw	r28, 0x11	; 17
 376:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 37a:	9b 01       	movw	r18, r22
 37c:	ac 01       	movw	r20, r24
 37e:	c5 01       	movw	r24, r10
 380:	b4 01       	movw	r22, r8
 382:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 386:	4b 01       	movw	r8, r22
 388:	5c 01       	movw	r10, r24
 38a:	2b e6       	ldi	r18, 0x6B	; 107
 38c:	3c e8       	ldi	r19, 0x8C	; 140
 38e:	4e e4       	ldi	r20, 0x4E	; 78
 390:	59 e3       	ldi	r21, 0x39	; 57
 392:	65 96       	adiw	r28, 0x15	; 21
 394:	6c ad       	ldd	r22, Y+60	; 0x3c
 396:	7d ad       	ldd	r23, Y+61	; 0x3d
 398:	8e ad       	ldd	r24, Y+62	; 0x3e
 39a:	9f ad       	ldd	r25, Y+63	; 0x3f
 39c:	65 97       	sbiw	r28, 0x15	; 21
 39e:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 3a2:	9b 01       	movw	r18, r22
 3a4:	ac 01       	movw	r20, r24
 3a6:	c5 01       	movw	r24, r10
 3a8:	b4 01       	movw	r22, r8
 3aa:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 3ae:	4b 01       	movw	r8, r22
 3b0:	5c 01       	movw	r10, r24
 3b2:	a7 01       	movw	r20, r14
 3b4:	96 01       	movw	r18, r12
 3b6:	c7 01       	movw	r24, r14
 3b8:	b6 01       	movw	r22, r12
 3ba:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 3be:	2d ea       	ldi	r18, 0xAD	; 173
 3c0:	39 e6       	ldi	r19, 0x69	; 105
 3c2:	4e e5       	ldi	r20, 0x5E	; 94
 3c4:	5d eb       	ldi	r21, 0xBD	; 189
 3c6:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 3ca:	9b 01       	movw	r18, r22
 3cc:	ac 01       	movw	r20, r24
 3ce:	c5 01       	movw	r24, r10
 3d0:	b4 01       	movw	r22, r8
 3d2:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 3d6:	4b 01       	movw	r8, r22
 3d8:	5c 01       	movw	r10, r24
 3da:	2d e6       	ldi	r18, 0x6D	; 109
 3dc:	35 ec       	ldi	r19, 0xC5	; 197
 3de:	46 ee       	ldi	r20, 0xE6	; 230
 3e0:	50 e4       	ldi	r21, 0x40	; 64
 3e2:	c7 01       	movw	r24, r14
 3e4:	b6 01       	movw	r22, r12
 3e6:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 3ea:	9b 01       	movw	r18, r22
 3ec:	ac 01       	movw	r20, r24
 3ee:	c5 01       	movw	r24, r10
 3f0:	b4 01       	movw	r22, r8
 3f2:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 3f6:	27 ee       	ldi	r18, 0xE7	; 231
 3f8:	33 e4       	ldi	r19, 0x43	; 67
 3fa:	41 eb       	ldi	r20, 0xB1	; 177
 3fc:	53 e4       	ldi	r21, 0x43	; 67
 3fe:	0e 94 86 02 	call	0x50c	; 0x50c <__subsf3>
 402:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <__fixsfsi>
 406:	9b 01       	movw	r18, r22
 408:	77 23       	and	r23, r23
 40a:	24 f4       	brge	.+8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40c:	22 27       	eor	r18, r18
 40e:	33 27       	eor	r19, r19
 410:	26 1b       	sub	r18, r22
 412:	37 0b       	sbc	r19, r23
 414:	b9 01       	movw	r22, r18
 416:	33 0f       	add	r19, r19
 418:	88 0b       	sbc	r24, r24
 41a:	99 0b       	sbc	r25, r25
 41c:	0e 94 2b 03 	call	0x656	; 0x656 <__floatsisf>
 420:	c6 2e       	mov	r12, r22
 422:	d7 2e       	mov	r13, r23
 424:	e8 2e       	mov	r14, r24
 426:	f9 2e       	mov	r15, r25
			//wrap result

			//convert to velocity
			// handle wrapping
			angVel = (angPos - angPosLast) *0.00277778*sampPer; // rev/s
 428:	21 2f       	mov	r18, r17
 42a:	30 2f       	mov	r19, r16
 42c:	43 2d       	mov	r20, r3
 42e:	52 2d       	mov	r21, r2
 430:	0e 94 86 02 	call	0x50c	; 0x50c <__subsf3>
 434:	2a e6       	ldi	r18, 0x6A	; 106
 436:	3b e0       	ldi	r19, 0x0B	; 11
 438:	46 e3       	ldi	r20, 0x36	; 54
 43a:	5b e3       	ldi	r21, 0x3B	; 59
 43c:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 440:	20 e0       	ldi	r18, 0x00	; 0
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	4a e7       	ldi	r20, 0x7A	; 122
 446:	54 e4       	ldi	r21, 0x44	; 68
 448:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 44c:	4b 01       	movw	r8, r22
 44e:	5c 01       	movw	r10, r24
			
			if(!filtInit){
 450:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 454:	81 11       	cpse	r24, r1
 456:	07 c0       	rjmp	.+14     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
				digital_filter_init(angVel);
 458:	c5 01       	movw	r24, r10
 45a:	b4 01       	movw	r22, r8
 45c:	0e 94 94 00 	call	0x128	; 0x128 <digital_filter_init>
				filtInit = 1;
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
			//filter velocity
			//filteredVel.asFloat = filterValue(angVel);
			//filteredVel = filterValue(angVel);
			filteredVel = angVel;	
			//reset TIMER1_flag
			TIFR1 |= (1 << OCF1A);
 466:	b1 9a       	sbi	0x16, 1	; 22
				digital_filter_init(angVel);
				filtInit = 1;
			}
			
			//add angPos to queue
			angPosLast = angPos;
 468:	1c 2d       	mov	r17, r12
 46a:	0d 2d       	mov	r16, r13
 46c:	3e 2c       	mov	r3, r14
 46e:	2f 2c       	mov	r2, r15
			//filteredVel = filterValue(angVel);
			filteredVel = angVel;	
			//reset TIMER1_flag
			TIFR1 |= (1 << OCF1A);
		} 
		if (rb_length_C(&output_queue) > 0){
 470:	ce 01       	movw	r24, r28
 472:	8d 5b       	subi	r24, 0xBD	; 189
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	0e 94 53 02 	call	0x4a6	; 0x4a6 <rb_length_C>
 47a:	88 23       	and	r24, r24
 47c:	09 f4       	brne	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47e:	16 cf       	rjmp	.-468    	; 0x2ac <main+0x4c>
			print_byte(rb_pop_front_C(&output_queue));
 480:	ce 01       	movw	r24, r28
 482:	8d 5b       	subi	r24, 0xBD	; 189
 484:	9f 4f       	sbci	r25, 0xFF	; 255
 486:	0e 94 75 02 	call	0x4ea	; 0x4ea <rb_pop_front_C>
 48a:	0e 94 c7 00 	call	0x18e	; 0x18e <print_byte>
 48e:	0e cf       	rjmp	.-484    	; 0x2ac <main+0x4c>

00000490 <rb_initialize_F>:
 490:	fc 01       	movw	r30, r24
 492:	e0 5c       	subi	r30, 0xC0	; 192
 494:	ff 4f       	sbci	r31, 0xFF	; 255
 496:	10 82       	st	Z, r1
 498:	31 96       	adiw	r30, 0x01	; 1
 49a:	10 82       	st	Z, r1
 49c:	08 95       	ret

0000049e <rb_initialize_C>:
 49e:	fc 01       	movw	r30, r24
 4a0:	10 86       	std	Z+8, r1	; 0x08
 4a2:	11 86       	std	Z+9, r1	; 0x09
 4a4:	08 95       	ret

000004a6 <rb_length_C>:
 4a6:	fc 01       	movw	r30, r24
 4a8:	91 85       	ldd	r25, Z+9	; 0x09
 4aa:	80 85       	ldd	r24, Z+8	; 0x08
 4ac:	98 1b       	sub	r25, r24
 4ae:	89 2f       	mov	r24, r25
 4b0:	87 70       	andi	r24, 0x07	; 7
 4b2:	08 95       	ret

000004b4 <rb_push_front_F>:
 4b4:	9c 01       	movw	r18, r24
 4b6:	fc 01       	movw	r30, r24
 4b8:	e0 5c       	subi	r30, 0xC0	; 192
 4ba:	ff 4f       	sbci	r31, 0xFF	; 255
 4bc:	90 81       	ld	r25, Z
 4be:	91 50       	subi	r25, 0x01	; 1
 4c0:	9f 70       	andi	r25, 0x0F	; 15
 4c2:	90 83       	st	Z, r25
 4c4:	31 96       	adiw	r30, 0x01	; 1
 4c6:	80 81       	ld	r24, Z
 4c8:	98 13       	cpse	r25, r24
 4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <rb_push_front_F+0x20>
 4cc:	8f ef       	ldi	r24, 0xFF	; 255
 4ce:	89 0f       	add	r24, r25
 4d0:	8f 70       	andi	r24, 0x0F	; 15
 4d2:	80 83       	st	Z, r24
 4d4:	f9 01       	movw	r30, r18
 4d6:	84 e0       	ldi	r24, 0x04	; 4
 4d8:	98 9f       	mul	r25, r24
 4da:	e0 0d       	add	r30, r0
 4dc:	f1 1d       	adc	r31, r1
 4de:	11 24       	eor	r1, r1
 4e0:	40 83       	st	Z, r20
 4e2:	51 83       	std	Z+1, r21	; 0x01
 4e4:	62 83       	std	Z+2, r22	; 0x02
 4e6:	73 83       	std	Z+3, r23	; 0x03
 4e8:	08 95       	ret

000004ea <rb_pop_front_C>:
 4ea:	fc 01       	movw	r30, r24
 4ec:	90 85       	ldd	r25, Z+8	; 0x08
 4ee:	29 2f       	mov	r18, r25
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	81 85       	ldd	r24, Z+9	; 0x09
 4f4:	98 17       	cp	r25, r24
 4f6:	41 f0       	breq	.+16     	; 0x508 <rb_pop_front_C+0x1e>
 4f8:	df 01       	movw	r26, r30
 4fa:	a2 0f       	add	r26, r18
 4fc:	b3 1f       	adc	r27, r19
 4fe:	8c 91       	ld	r24, X
 500:	9f 5f       	subi	r25, 0xFF	; 255
 502:	9f 70       	andi	r25, 0x0F	; 15
 504:	90 87       	std	Z+8, r25	; 0x08
 506:	08 95       	ret
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	08 95       	ret

0000050c <__subsf3>:
 50c:	50 58       	subi	r21, 0x80	; 128

0000050e <__addsf3>:
 50e:	bb 27       	eor	r27, r27
 510:	aa 27       	eor	r26, r26
 512:	0e 94 9e 02 	call	0x53c	; 0x53c <__addsf3x>
 516:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_round>
 51a:	0e 94 6f 03 	call	0x6de	; 0x6de <__fp_pscA>
 51e:	38 f0       	brcs	.+14     	; 0x52e <__addsf3+0x20>
 520:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_pscB>
 524:	20 f0       	brcs	.+8      	; 0x52e <__addsf3+0x20>
 526:	39 f4       	brne	.+14     	; 0x536 <__addsf3+0x28>
 528:	9f 3f       	cpi	r25, 0xFF	; 255
 52a:	19 f4       	brne	.+6      	; 0x532 <__addsf3+0x24>
 52c:	26 f4       	brtc	.+8      	; 0x536 <__addsf3+0x28>
 52e:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>
 532:	0e f4       	brtc	.+2      	; 0x536 <__addsf3+0x28>
 534:	e0 95       	com	r30
 536:	e7 fb       	bst	r30, 7
 538:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>

0000053c <__addsf3x>:
 53c:	e9 2f       	mov	r30, r25
 53e:	0e 94 8e 03 	call	0x71c	; 0x71c <__fp_split3>
 542:	58 f3       	brcs	.-42     	; 0x51a <__addsf3+0xc>
 544:	ba 17       	cp	r27, r26
 546:	62 07       	cpc	r22, r18
 548:	73 07       	cpc	r23, r19
 54a:	84 07       	cpc	r24, r20
 54c:	95 07       	cpc	r25, r21
 54e:	20 f0       	brcs	.+8      	; 0x558 <__addsf3x+0x1c>
 550:	79 f4       	brne	.+30     	; 0x570 <__addsf3x+0x34>
 552:	a6 f5       	brtc	.+104    	; 0x5bc <__addsf3x+0x80>
 554:	0c 94 b0 03 	jmp	0x760	; 0x760 <__fp_zero>
 558:	0e f4       	brtc	.+2      	; 0x55c <__addsf3x+0x20>
 55a:	e0 95       	com	r30
 55c:	0b 2e       	mov	r0, r27
 55e:	ba 2f       	mov	r27, r26
 560:	a0 2d       	mov	r26, r0
 562:	0b 01       	movw	r0, r22
 564:	b9 01       	movw	r22, r18
 566:	90 01       	movw	r18, r0
 568:	0c 01       	movw	r0, r24
 56a:	ca 01       	movw	r24, r20
 56c:	a0 01       	movw	r20, r0
 56e:	11 24       	eor	r1, r1
 570:	ff 27       	eor	r31, r31
 572:	59 1b       	sub	r21, r25
 574:	99 f0       	breq	.+38     	; 0x59c <__addsf3x+0x60>
 576:	59 3f       	cpi	r21, 0xF9	; 249
 578:	50 f4       	brcc	.+20     	; 0x58e <__addsf3x+0x52>
 57a:	50 3e       	cpi	r21, 0xE0	; 224
 57c:	68 f1       	brcs	.+90     	; 0x5d8 <__addsf3x+0x9c>
 57e:	1a 16       	cp	r1, r26
 580:	f0 40       	sbci	r31, 0x00	; 0
 582:	a2 2f       	mov	r26, r18
 584:	23 2f       	mov	r18, r19
 586:	34 2f       	mov	r19, r20
 588:	44 27       	eor	r20, r20
 58a:	58 5f       	subi	r21, 0xF8	; 248
 58c:	f3 cf       	rjmp	.-26     	; 0x574 <__addsf3x+0x38>
 58e:	46 95       	lsr	r20
 590:	37 95       	ror	r19
 592:	27 95       	ror	r18
 594:	a7 95       	ror	r26
 596:	f0 40       	sbci	r31, 0x00	; 0
 598:	53 95       	inc	r21
 59a:	c9 f7       	brne	.-14     	; 0x58e <__addsf3x+0x52>
 59c:	7e f4       	brtc	.+30     	; 0x5bc <__addsf3x+0x80>
 59e:	1f 16       	cp	r1, r31
 5a0:	ba 0b       	sbc	r27, r26
 5a2:	62 0b       	sbc	r22, r18
 5a4:	73 0b       	sbc	r23, r19
 5a6:	84 0b       	sbc	r24, r20
 5a8:	ba f0       	brmi	.+46     	; 0x5d8 <__addsf3x+0x9c>
 5aa:	91 50       	subi	r25, 0x01	; 1
 5ac:	a1 f0       	breq	.+40     	; 0x5d6 <__addsf3x+0x9a>
 5ae:	ff 0f       	add	r31, r31
 5b0:	bb 1f       	adc	r27, r27
 5b2:	66 1f       	adc	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	c2 f7       	brpl	.-16     	; 0x5aa <__addsf3x+0x6e>
 5ba:	0e c0       	rjmp	.+28     	; 0x5d8 <__addsf3x+0x9c>
 5bc:	ba 0f       	add	r27, r26
 5be:	62 1f       	adc	r22, r18
 5c0:	73 1f       	adc	r23, r19
 5c2:	84 1f       	adc	r24, r20
 5c4:	48 f4       	brcc	.+18     	; 0x5d8 <__addsf3x+0x9c>
 5c6:	87 95       	ror	r24
 5c8:	77 95       	ror	r23
 5ca:	67 95       	ror	r22
 5cc:	b7 95       	ror	r27
 5ce:	f7 95       	ror	r31
 5d0:	9e 3f       	cpi	r25, 0xFE	; 254
 5d2:	08 f0       	brcs	.+2      	; 0x5d6 <__addsf3x+0x9a>
 5d4:	b0 cf       	rjmp	.-160    	; 0x536 <__addsf3+0x28>
 5d6:	93 95       	inc	r25
 5d8:	88 0f       	add	r24, r24
 5da:	08 f0       	brcs	.+2      	; 0x5de <__addsf3x+0xa2>
 5dc:	99 27       	eor	r25, r25
 5de:	ee 0f       	add	r30, r30
 5e0:	97 95       	ror	r25
 5e2:	87 95       	ror	r24
 5e4:	08 95       	ret

000005e6 <__fixsfsi>:
 5e6:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fixunssfsi>
 5ea:	68 94       	set
 5ec:	b1 11       	cpse	r27, r1
 5ee:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>
 5f2:	08 95       	ret

000005f4 <__fixunssfsi>:
 5f4:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_splitA>
 5f8:	88 f0       	brcs	.+34     	; 0x61c <__fixunssfsi+0x28>
 5fa:	9f 57       	subi	r25, 0x7F	; 127
 5fc:	98 f0       	brcs	.+38     	; 0x624 <__fixunssfsi+0x30>
 5fe:	b9 2f       	mov	r27, r25
 600:	99 27       	eor	r25, r25
 602:	b7 51       	subi	r27, 0x17	; 23
 604:	b0 f0       	brcs	.+44     	; 0x632 <__fixunssfsi+0x3e>
 606:	e1 f0       	breq	.+56     	; 0x640 <__fixunssfsi+0x4c>
 608:	66 0f       	add	r22, r22
 60a:	77 1f       	adc	r23, r23
 60c:	88 1f       	adc	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	1a f0       	brmi	.+6      	; 0x618 <__fixunssfsi+0x24>
 612:	ba 95       	dec	r27
 614:	c9 f7       	brne	.-14     	; 0x608 <__fixunssfsi+0x14>
 616:	14 c0       	rjmp	.+40     	; 0x640 <__fixunssfsi+0x4c>
 618:	b1 30       	cpi	r27, 0x01	; 1
 61a:	91 f0       	breq	.+36     	; 0x640 <__fixunssfsi+0x4c>
 61c:	0e 94 b0 03 	call	0x760	; 0x760 <__fp_zero>
 620:	b1 e0       	ldi	r27, 0x01	; 1
 622:	08 95       	ret
 624:	0c 94 b0 03 	jmp	0x760	; 0x760 <__fp_zero>
 628:	67 2f       	mov	r22, r23
 62a:	78 2f       	mov	r23, r24
 62c:	88 27       	eor	r24, r24
 62e:	b8 5f       	subi	r27, 0xF8	; 248
 630:	39 f0       	breq	.+14     	; 0x640 <__fixunssfsi+0x4c>
 632:	b9 3f       	cpi	r27, 0xF9	; 249
 634:	cc f3       	brlt	.-14     	; 0x628 <__fixunssfsi+0x34>
 636:	86 95       	lsr	r24
 638:	77 95       	ror	r23
 63a:	67 95       	ror	r22
 63c:	b3 95       	inc	r27
 63e:	d9 f7       	brne	.-10     	; 0x636 <__fixunssfsi+0x42>
 640:	3e f4       	brtc	.+14     	; 0x650 <__fixunssfsi+0x5c>
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	08 95       	ret

00000652 <__floatunsisf>:
 652:	e8 94       	clt
 654:	09 c0       	rjmp	.+18     	; 0x668 <__floatsisf+0x12>

00000656 <__floatsisf>:
 656:	97 fb       	bst	r25, 7
 658:	3e f4       	brtc	.+14     	; 0x668 <__floatsisf+0x12>
 65a:	90 95       	com	r25
 65c:	80 95       	com	r24
 65e:	70 95       	com	r23
 660:	61 95       	neg	r22
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	99 23       	and	r25, r25
 66a:	a9 f0       	breq	.+42     	; 0x696 <__floatsisf+0x40>
 66c:	f9 2f       	mov	r31, r25
 66e:	96 e9       	ldi	r25, 0x96	; 150
 670:	bb 27       	eor	r27, r27
 672:	93 95       	inc	r25
 674:	f6 95       	lsr	r31
 676:	87 95       	ror	r24
 678:	77 95       	ror	r23
 67a:	67 95       	ror	r22
 67c:	b7 95       	ror	r27
 67e:	f1 11       	cpse	r31, r1
 680:	f8 cf       	rjmp	.-16     	; 0x672 <__floatsisf+0x1c>
 682:	fa f4       	brpl	.+62     	; 0x6c2 <__floatsisf+0x6c>
 684:	bb 0f       	add	r27, r27
 686:	11 f4       	brne	.+4      	; 0x68c <__floatsisf+0x36>
 688:	60 ff       	sbrs	r22, 0
 68a:	1b c0       	rjmp	.+54     	; 0x6c2 <__floatsisf+0x6c>
 68c:	6f 5f       	subi	r22, 0xFF	; 255
 68e:	7f 4f       	sbci	r23, 0xFF	; 255
 690:	8f 4f       	sbci	r24, 0xFF	; 255
 692:	9f 4f       	sbci	r25, 0xFF	; 255
 694:	16 c0       	rjmp	.+44     	; 0x6c2 <__floatsisf+0x6c>
 696:	88 23       	and	r24, r24
 698:	11 f0       	breq	.+4      	; 0x69e <__floatsisf+0x48>
 69a:	96 e9       	ldi	r25, 0x96	; 150
 69c:	11 c0       	rjmp	.+34     	; 0x6c0 <__floatsisf+0x6a>
 69e:	77 23       	and	r23, r23
 6a0:	21 f0       	breq	.+8      	; 0x6aa <__floatsisf+0x54>
 6a2:	9e e8       	ldi	r25, 0x8E	; 142
 6a4:	87 2f       	mov	r24, r23
 6a6:	76 2f       	mov	r23, r22
 6a8:	05 c0       	rjmp	.+10     	; 0x6b4 <__floatsisf+0x5e>
 6aa:	66 23       	and	r22, r22
 6ac:	71 f0       	breq	.+28     	; 0x6ca <__floatsisf+0x74>
 6ae:	96 e8       	ldi	r25, 0x86	; 134
 6b0:	86 2f       	mov	r24, r22
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	60 e0       	ldi	r22, 0x00	; 0
 6b6:	2a f0       	brmi	.+10     	; 0x6c2 <__floatsisf+0x6c>
 6b8:	9a 95       	dec	r25
 6ba:	66 0f       	add	r22, r22
 6bc:	77 1f       	adc	r23, r23
 6be:	88 1f       	adc	r24, r24
 6c0:	da f7       	brpl	.-10     	; 0x6b8 <__floatsisf+0x62>
 6c2:	88 0f       	add	r24, r24
 6c4:	96 95       	lsr	r25
 6c6:	87 95       	ror	r24
 6c8:	97 f9       	bld	r25, 7
 6ca:	08 95       	ret

000006cc <__fp_inf>:
 6cc:	97 f9       	bld	r25, 7
 6ce:	9f 67       	ori	r25, 0x7F	; 127
 6d0:	80 e8       	ldi	r24, 0x80	; 128
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	60 e0       	ldi	r22, 0x00	; 0
 6d6:	08 95       	ret

000006d8 <__fp_nan>:
 6d8:	9f ef       	ldi	r25, 0xFF	; 255
 6da:	80 ec       	ldi	r24, 0xC0	; 192
 6dc:	08 95       	ret

000006de <__fp_pscA>:
 6de:	00 24       	eor	r0, r0
 6e0:	0a 94       	dec	r0
 6e2:	16 16       	cp	r1, r22
 6e4:	17 06       	cpc	r1, r23
 6e6:	18 06       	cpc	r1, r24
 6e8:	09 06       	cpc	r0, r25
 6ea:	08 95       	ret

000006ec <__fp_pscB>:
 6ec:	00 24       	eor	r0, r0
 6ee:	0a 94       	dec	r0
 6f0:	12 16       	cp	r1, r18
 6f2:	13 06       	cpc	r1, r19
 6f4:	14 06       	cpc	r1, r20
 6f6:	05 06       	cpc	r0, r21
 6f8:	08 95       	ret

000006fa <__fp_round>:
 6fa:	09 2e       	mov	r0, r25
 6fc:	03 94       	inc	r0
 6fe:	00 0c       	add	r0, r0
 700:	11 f4       	brne	.+4      	; 0x706 <__fp_round+0xc>
 702:	88 23       	and	r24, r24
 704:	52 f0       	brmi	.+20     	; 0x71a <__fp_round+0x20>
 706:	bb 0f       	add	r27, r27
 708:	40 f4       	brcc	.+16     	; 0x71a <__fp_round+0x20>
 70a:	bf 2b       	or	r27, r31
 70c:	11 f4       	brne	.+4      	; 0x712 <__fp_round+0x18>
 70e:	60 ff       	sbrs	r22, 0
 710:	04 c0       	rjmp	.+8      	; 0x71a <__fp_round+0x20>
 712:	6f 5f       	subi	r22, 0xFF	; 255
 714:	7f 4f       	sbci	r23, 0xFF	; 255
 716:	8f 4f       	sbci	r24, 0xFF	; 255
 718:	9f 4f       	sbci	r25, 0xFF	; 255
 71a:	08 95       	ret

0000071c <__fp_split3>:
 71c:	57 fd       	sbrc	r21, 7
 71e:	90 58       	subi	r25, 0x80	; 128
 720:	44 0f       	add	r20, r20
 722:	55 1f       	adc	r21, r21
 724:	59 f0       	breq	.+22     	; 0x73c <__fp_splitA+0x10>
 726:	5f 3f       	cpi	r21, 0xFF	; 255
 728:	71 f0       	breq	.+28     	; 0x746 <__fp_splitA+0x1a>
 72a:	47 95       	ror	r20

0000072c <__fp_splitA>:
 72c:	88 0f       	add	r24, r24
 72e:	97 fb       	bst	r25, 7
 730:	99 1f       	adc	r25, r25
 732:	61 f0       	breq	.+24     	; 0x74c <__fp_splitA+0x20>
 734:	9f 3f       	cpi	r25, 0xFF	; 255
 736:	79 f0       	breq	.+30     	; 0x756 <__fp_splitA+0x2a>
 738:	87 95       	ror	r24
 73a:	08 95       	ret
 73c:	12 16       	cp	r1, r18
 73e:	13 06       	cpc	r1, r19
 740:	14 06       	cpc	r1, r20
 742:	55 1f       	adc	r21, r21
 744:	f2 cf       	rjmp	.-28     	; 0x72a <__fp_split3+0xe>
 746:	46 95       	lsr	r20
 748:	f1 df       	rcall	.-30     	; 0x72c <__fp_splitA>
 74a:	08 c0       	rjmp	.+16     	; 0x75c <__fp_splitA+0x30>
 74c:	16 16       	cp	r1, r22
 74e:	17 06       	cpc	r1, r23
 750:	18 06       	cpc	r1, r24
 752:	99 1f       	adc	r25, r25
 754:	f1 cf       	rjmp	.-30     	; 0x738 <__fp_splitA+0xc>
 756:	86 95       	lsr	r24
 758:	71 05       	cpc	r23, r1
 75a:	61 05       	cpc	r22, r1
 75c:	08 94       	sec
 75e:	08 95       	ret

00000760 <__fp_zero>:
 760:	e8 94       	clt

00000762 <__fp_szero>:
 762:	bb 27       	eor	r27, r27
 764:	66 27       	eor	r22, r22
 766:	77 27       	eor	r23, r23
 768:	cb 01       	movw	r24, r22
 76a:	97 f9       	bld	r25, 7
 76c:	08 95       	ret

0000076e <__mulsf3>:
 76e:	0e 94 ca 03 	call	0x794	; 0x794 <__mulsf3x>
 772:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_round>
 776:	0e 94 6f 03 	call	0x6de	; 0x6de <__fp_pscA>
 77a:	38 f0       	brcs	.+14     	; 0x78a <__mulsf3+0x1c>
 77c:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_pscB>
 780:	20 f0       	brcs	.+8      	; 0x78a <__mulsf3+0x1c>
 782:	95 23       	and	r25, r21
 784:	11 f0       	breq	.+4      	; 0x78a <__mulsf3+0x1c>
 786:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 78a:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>
 78e:	11 24       	eor	r1, r1
 790:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>

00000794 <__mulsf3x>:
 794:	0e 94 8e 03 	call	0x71c	; 0x71c <__fp_split3>
 798:	70 f3       	brcs	.-36     	; 0x776 <__mulsf3+0x8>

0000079a <__mulsf3_pse>:
 79a:	95 9f       	mul	r25, r21
 79c:	c1 f3       	breq	.-16     	; 0x78e <__mulsf3+0x20>
 79e:	95 0f       	add	r25, r21
 7a0:	50 e0       	ldi	r21, 0x00	; 0
 7a2:	55 1f       	adc	r21, r21
 7a4:	62 9f       	mul	r22, r18
 7a6:	f0 01       	movw	r30, r0
 7a8:	72 9f       	mul	r23, r18
 7aa:	bb 27       	eor	r27, r27
 7ac:	f0 0d       	add	r31, r0
 7ae:	b1 1d       	adc	r27, r1
 7b0:	63 9f       	mul	r22, r19
 7b2:	aa 27       	eor	r26, r26
 7b4:	f0 0d       	add	r31, r0
 7b6:	b1 1d       	adc	r27, r1
 7b8:	aa 1f       	adc	r26, r26
 7ba:	64 9f       	mul	r22, r20
 7bc:	66 27       	eor	r22, r22
 7be:	b0 0d       	add	r27, r0
 7c0:	a1 1d       	adc	r26, r1
 7c2:	66 1f       	adc	r22, r22
 7c4:	82 9f       	mul	r24, r18
 7c6:	22 27       	eor	r18, r18
 7c8:	b0 0d       	add	r27, r0
 7ca:	a1 1d       	adc	r26, r1
 7cc:	62 1f       	adc	r22, r18
 7ce:	73 9f       	mul	r23, r19
 7d0:	b0 0d       	add	r27, r0
 7d2:	a1 1d       	adc	r26, r1
 7d4:	62 1f       	adc	r22, r18
 7d6:	83 9f       	mul	r24, r19
 7d8:	a0 0d       	add	r26, r0
 7da:	61 1d       	adc	r22, r1
 7dc:	22 1f       	adc	r18, r18
 7de:	74 9f       	mul	r23, r20
 7e0:	33 27       	eor	r19, r19
 7e2:	a0 0d       	add	r26, r0
 7e4:	61 1d       	adc	r22, r1
 7e6:	23 1f       	adc	r18, r19
 7e8:	84 9f       	mul	r24, r20
 7ea:	60 0d       	add	r22, r0
 7ec:	21 1d       	adc	r18, r1
 7ee:	82 2f       	mov	r24, r18
 7f0:	76 2f       	mov	r23, r22
 7f2:	6a 2f       	mov	r22, r26
 7f4:	11 24       	eor	r1, r1
 7f6:	9f 57       	subi	r25, 0x7F	; 127
 7f8:	50 40       	sbci	r21, 0x00	; 0
 7fa:	9a f0       	brmi	.+38     	; 0x822 <__mulsf3_pse+0x88>
 7fc:	f1 f0       	breq	.+60     	; 0x83a <__mulsf3_pse+0xa0>
 7fe:	88 23       	and	r24, r24
 800:	4a f0       	brmi	.+18     	; 0x814 <__mulsf3_pse+0x7a>
 802:	ee 0f       	add	r30, r30
 804:	ff 1f       	adc	r31, r31
 806:	bb 1f       	adc	r27, r27
 808:	66 1f       	adc	r22, r22
 80a:	77 1f       	adc	r23, r23
 80c:	88 1f       	adc	r24, r24
 80e:	91 50       	subi	r25, 0x01	; 1
 810:	50 40       	sbci	r21, 0x00	; 0
 812:	a9 f7       	brne	.-22     	; 0x7fe <__mulsf3_pse+0x64>
 814:	9e 3f       	cpi	r25, 0xFE	; 254
 816:	51 05       	cpc	r21, r1
 818:	80 f0       	brcs	.+32     	; 0x83a <__mulsf3_pse+0xa0>
 81a:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 81e:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>
 822:	5f 3f       	cpi	r21, 0xFF	; 255
 824:	e4 f3       	brlt	.-8      	; 0x81e <__mulsf3_pse+0x84>
 826:	98 3e       	cpi	r25, 0xE8	; 232
 828:	d4 f3       	brlt	.-12     	; 0x81e <__mulsf3_pse+0x84>
 82a:	86 95       	lsr	r24
 82c:	77 95       	ror	r23
 82e:	67 95       	ror	r22
 830:	b7 95       	ror	r27
 832:	f7 95       	ror	r31
 834:	e7 95       	ror	r30
 836:	9f 5f       	subi	r25, 0xFF	; 255
 838:	c1 f7       	brne	.-16     	; 0x82a <__mulsf3_pse+0x90>
 83a:	fe 2b       	or	r31, r30
 83c:	88 0f       	add	r24, r24
 83e:	91 1d       	adc	r25, r1
 840:	96 95       	lsr	r25
 842:	87 95       	ror	r24
 844:	97 f9       	bld	r25, 7
 846:	08 95       	ret

00000848 <pow>:
 848:	fa 01       	movw	r30, r20
 84a:	ee 0f       	add	r30, r30
 84c:	ff 1f       	adc	r31, r31
 84e:	30 96       	adiw	r30, 0x00	; 0
 850:	21 05       	cpc	r18, r1
 852:	31 05       	cpc	r19, r1
 854:	a1 f1       	breq	.+104    	; 0x8be <pow+0x76>
 856:	61 15       	cp	r22, r1
 858:	71 05       	cpc	r23, r1
 85a:	61 f4       	brne	.+24     	; 0x874 <pow+0x2c>
 85c:	80 38       	cpi	r24, 0x80	; 128
 85e:	bf e3       	ldi	r27, 0x3F	; 63
 860:	9b 07       	cpc	r25, r27
 862:	49 f1       	breq	.+82     	; 0x8b6 <pow+0x6e>
 864:	68 94       	set
 866:	90 38       	cpi	r25, 0x80	; 128
 868:	81 05       	cpc	r24, r1
 86a:	61 f0       	breq	.+24     	; 0x884 <pow+0x3c>
 86c:	80 38       	cpi	r24, 0x80	; 128
 86e:	bf ef       	ldi	r27, 0xFF	; 255
 870:	9b 07       	cpc	r25, r27
 872:	41 f0       	breq	.+16     	; 0x884 <pow+0x3c>
 874:	99 23       	and	r25, r25
 876:	4a f5       	brpl	.+82     	; 0x8ca <pow+0x82>
 878:	ff 3f       	cpi	r31, 0xFF	; 255
 87a:	e1 05       	cpc	r30, r1
 87c:	31 05       	cpc	r19, r1
 87e:	21 05       	cpc	r18, r1
 880:	19 f1       	breq	.+70     	; 0x8c8 <pow+0x80>
 882:	e8 94       	clt
 884:	08 94       	sec
 886:	e7 95       	ror	r30
 888:	d9 01       	movw	r26, r18
 88a:	aa 23       	and	r26, r26
 88c:	29 f4       	brne	.+10     	; 0x898 <pow+0x50>
 88e:	ab 2f       	mov	r26, r27
 890:	be 2f       	mov	r27, r30
 892:	f8 5f       	subi	r31, 0xF8	; 248
 894:	d0 f3       	brcs	.-12     	; 0x88a <pow+0x42>
 896:	10 c0       	rjmp	.+32     	; 0x8b8 <pow+0x70>
 898:	ff 5f       	subi	r31, 0xFF	; 255
 89a:	70 f4       	brcc	.+28     	; 0x8b8 <pow+0x70>
 89c:	a6 95       	lsr	r26
 89e:	e0 f7       	brcc	.-8      	; 0x898 <pow+0x50>
 8a0:	f7 39       	cpi	r31, 0x97	; 151
 8a2:	50 f0       	brcs	.+20     	; 0x8b8 <pow+0x70>
 8a4:	19 f0       	breq	.+6      	; 0x8ac <pow+0x64>
 8a6:	ff 3a       	cpi	r31, 0xAF	; 175
 8a8:	38 f4       	brcc	.+14     	; 0x8b8 <pow+0x70>
 8aa:	9f 77       	andi	r25, 0x7F	; 127
 8ac:	9f 93       	push	r25
 8ae:	0d d0       	rcall	.+26     	; 0x8ca <pow+0x82>
 8b0:	0f 90       	pop	r0
 8b2:	07 fc       	sbrc	r0, 7
 8b4:	90 58       	subi	r25, 0x80	; 128
 8b6:	08 95       	ret
 8b8:	46 f0       	brts	.+16     	; 0x8ca <pow+0x82>
 8ba:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>
 8be:	60 e0       	ldi	r22, 0x00	; 0
 8c0:	70 e0       	ldi	r23, 0x00	; 0
 8c2:	80 e8       	ldi	r24, 0x80	; 128
 8c4:	9f e3       	ldi	r25, 0x3F	; 63
 8c6:	08 95       	ret
 8c8:	4f e7       	ldi	r20, 0x7F	; 127
 8ca:	9f 77       	andi	r25, 0x7F	; 127
 8cc:	5f 93       	push	r21
 8ce:	4f 93       	push	r20
 8d0:	3f 93       	push	r19
 8d2:	2f 93       	push	r18
 8d4:	0e 94 1f 05 	call	0xa3e	; 0xa3e <log>
 8d8:	2f 91       	pop	r18
 8da:	3f 91       	pop	r19
 8dc:	4f 91       	pop	r20
 8de:	5f 91       	pop	r21
 8e0:	0e 94 b7 03 	call	0x76e	; 0x76e <__mulsf3>
 8e4:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <exp>
 8e8:	29 f4       	brne	.+10     	; 0x8f4 <pow+0xac>
 8ea:	16 f0       	brts	.+4      	; 0x8f0 <pow+0xa8>
 8ec:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 8f0:	0c 94 b0 03 	jmp	0x760	; 0x760 <__fp_zero>
 8f4:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>

000008f8 <exp>:
 8f8:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_splitA>
 8fc:	a8 f3       	brcs	.-22     	; 0x8e8 <pow+0xa0>
 8fe:	96 38       	cpi	r25, 0x86	; 134
 900:	a0 f7       	brcc	.-24     	; 0x8ea <pow+0xa2>
 902:	07 f8       	bld	r0, 7
 904:	0f 92       	push	r0
 906:	e8 94       	clt
 908:	2b e3       	ldi	r18, 0x3B	; 59
 90a:	3a ea       	ldi	r19, 0xAA	; 170
 90c:	48 eb       	ldi	r20, 0xB8	; 184
 90e:	5f e7       	ldi	r21, 0x7F	; 127
 910:	0e 94 cd 03 	call	0x79a	; 0x79a <__mulsf3_pse>
 914:	0f 92       	push	r0
 916:	0f 92       	push	r0
 918:	0f 92       	push	r0
 91a:	4d b7       	in	r20, 0x3d	; 61
 91c:	5e b7       	in	r21, 0x3e	; 62
 91e:	0f 92       	push	r0
 920:	0e 94 67 05 	call	0xace	; 0xace <modf>
 924:	e8 e6       	ldi	r30, 0x68	; 104
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_powser>
 92c:	4f 91       	pop	r20
 92e:	5f 91       	pop	r21
 930:	ef 91       	pop	r30
 932:	ff 91       	pop	r31
 934:	e5 95       	asr	r30
 936:	ee 1f       	adc	r30, r30
 938:	ff 1f       	adc	r31, r31
 93a:	49 f0       	breq	.+18     	; 0x94e <__stack+0x4f>
 93c:	fe 57       	subi	r31, 0x7E	; 126
 93e:	e0 68       	ori	r30, 0x80	; 128
 940:	44 27       	eor	r20, r20
 942:	ee 0f       	add	r30, r30
 944:	44 1f       	adc	r20, r20
 946:	fa 95       	dec	r31
 948:	e1 f7       	brne	.-8      	; 0x942 <__stack+0x43>
 94a:	41 95       	neg	r20
 94c:	55 0b       	sbc	r21, r21
 94e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <ldexp>
 952:	0f 90       	pop	r0
 954:	07 fe       	sbrs	r0, 7
 956:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <inverse>
 95a:	08 95       	ret

0000095c <__fp_powser>:
 95c:	df 93       	push	r29
 95e:	cf 93       	push	r28
 960:	1f 93       	push	r17
 962:	0f 93       	push	r16
 964:	ff 92       	push	r15
 966:	ef 92       	push	r14
 968:	df 92       	push	r13
 96a:	7b 01       	movw	r14, r22
 96c:	8c 01       	movw	r16, r24
 96e:	68 94       	set
 970:	06 c0       	rjmp	.+12     	; 0x97e <__fp_powser+0x22>
 972:	da 2e       	mov	r13, r26
 974:	ef 01       	movw	r28, r30
 976:	0e 94 ca 03 	call	0x794	; 0x794 <__mulsf3x>
 97a:	fe 01       	movw	r30, r28
 97c:	e8 94       	clt
 97e:	a5 91       	lpm	r26, Z+
 980:	25 91       	lpm	r18, Z+
 982:	35 91       	lpm	r19, Z+
 984:	45 91       	lpm	r20, Z+
 986:	55 91       	lpm	r21, Z+
 988:	a6 f3       	brts	.-24     	; 0x972 <__fp_powser+0x16>
 98a:	ef 01       	movw	r28, r30
 98c:	0e 94 9e 02 	call	0x53c	; 0x53c <__addsf3x>
 990:	fe 01       	movw	r30, r28
 992:	97 01       	movw	r18, r14
 994:	a8 01       	movw	r20, r16
 996:	da 94       	dec	r13
 998:	69 f7       	brne	.-38     	; 0x974 <__fp_powser+0x18>
 99a:	df 90       	pop	r13
 99c:	ef 90       	pop	r14
 99e:	ff 90       	pop	r15
 9a0:	0f 91       	pop	r16
 9a2:	1f 91       	pop	r17
 9a4:	cf 91       	pop	r28
 9a6:	df 91       	pop	r29
 9a8:	08 95       	ret

000009aa <inverse>:
 9aa:	9b 01       	movw	r18, r22
 9ac:	ac 01       	movw	r20, r24
 9ae:	60 e0       	ldi	r22, 0x00	; 0
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	80 e8       	ldi	r24, 0x80	; 128
 9b4:	9f e3       	ldi	r25, 0x3F	; 63
 9b6:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__divsf3>
 9ba:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 9be:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__fp_mpack>

000009c2 <ldexp>:
 9c2:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_splitA>
 9c6:	d8 f3       	brcs	.-10     	; 0x9be <inverse+0x14>
 9c8:	99 23       	and	r25, r25
 9ca:	c9 f3       	breq	.-14     	; 0x9be <inverse+0x14>
 9cc:	94 0f       	add	r25, r20
 9ce:	51 1d       	adc	r21, r1
 9d0:	a3 f3       	brvs	.-24     	; 0x9ba <inverse+0x10>
 9d2:	91 50       	subi	r25, 0x01	; 1
 9d4:	50 40       	sbci	r21, 0x00	; 0
 9d6:	94 f0       	brlt	.+36     	; 0x9fc <ldexp+0x3a>
 9d8:	59 f0       	breq	.+22     	; 0x9f0 <ldexp+0x2e>
 9da:	88 23       	and	r24, r24
 9dc:	32 f0       	brmi	.+12     	; 0x9ea <ldexp+0x28>
 9de:	66 0f       	add	r22, r22
 9e0:	77 1f       	adc	r23, r23
 9e2:	88 1f       	adc	r24, r24
 9e4:	91 50       	subi	r25, 0x01	; 1
 9e6:	50 40       	sbci	r21, 0x00	; 0
 9e8:	c1 f7       	brne	.-16     	; 0x9da <ldexp+0x18>
 9ea:	9e 3f       	cpi	r25, 0xFE	; 254
 9ec:	51 05       	cpc	r21, r1
 9ee:	2c f7       	brge	.-54     	; 0x9ba <inverse+0x10>
 9f0:	88 0f       	add	r24, r24
 9f2:	91 1d       	adc	r25, r1
 9f4:	96 95       	lsr	r25
 9f6:	87 95       	ror	r24
 9f8:	97 f9       	bld	r25, 7
 9fa:	08 95       	ret
 9fc:	5f 3f       	cpi	r21, 0xFF	; 255
 9fe:	ac f0       	brlt	.+42     	; 0xa2a <ldexp+0x68>
 a00:	98 3e       	cpi	r25, 0xE8	; 232
 a02:	9c f0       	brlt	.+38     	; 0xa2a <ldexp+0x68>
 a04:	bb 27       	eor	r27, r27
 a06:	86 95       	lsr	r24
 a08:	77 95       	ror	r23
 a0a:	67 95       	ror	r22
 a0c:	b7 95       	ror	r27
 a0e:	08 f4       	brcc	.+2      	; 0xa12 <ldexp+0x50>
 a10:	b1 60       	ori	r27, 0x01	; 1
 a12:	93 95       	inc	r25
 a14:	c1 f7       	brne	.-16     	; 0xa06 <ldexp+0x44>
 a16:	bb 0f       	add	r27, r27
 a18:	58 f7       	brcc	.-42     	; 0x9f0 <ldexp+0x2e>
 a1a:	11 f4       	brne	.+4      	; 0xa20 <ldexp+0x5e>
 a1c:	60 ff       	sbrs	r22, 0
 a1e:	e8 cf       	rjmp	.-48     	; 0x9f0 <ldexp+0x2e>
 a20:	6f 5f       	subi	r22, 0xFF	; 255
 a22:	7f 4f       	sbci	r23, 0xFF	; 255
 a24:	8f 4f       	sbci	r24, 0xFF	; 255
 a26:	9f 4f       	sbci	r25, 0xFF	; 255
 a28:	e3 cf       	rjmp	.-58     	; 0x9f0 <ldexp+0x2e>
 a2a:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>
 a2e:	16 f0       	brts	.+4      	; 0xa34 <ldexp+0x72>
 a30:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__fp_mpack>
 a34:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>
 a38:	68 94       	set
 a3a:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>

00000a3e <log>:
 a3e:	0e 94 96 03 	call	0x72c	; 0x72c <__fp_splitA>
 a42:	a8 f3       	brcs	.-22     	; 0xa2e <ldexp+0x6c>
 a44:	99 23       	and	r25, r25
 a46:	c1 f3       	breq	.-16     	; 0xa38 <ldexp+0x76>
 a48:	ae f3       	brts	.-22     	; 0xa34 <ldexp+0x72>
 a4a:	df 93       	push	r29
 a4c:	cf 93       	push	r28
 a4e:	1f 93       	push	r17
 a50:	0f 93       	push	r16
 a52:	ff 92       	push	r15
 a54:	c9 2f       	mov	r28, r25
 a56:	dd 27       	eor	r29, r29
 a58:	88 23       	and	r24, r24
 a5a:	2a f0       	brmi	.+10     	; 0xa66 <log+0x28>
 a5c:	21 97       	sbiw	r28, 0x01	; 1
 a5e:	66 0f       	add	r22, r22
 a60:	77 1f       	adc	r23, r23
 a62:	88 1f       	adc	r24, r24
 a64:	da f7       	brpl	.-10     	; 0xa5c <log+0x1e>
 a66:	20 e0       	ldi	r18, 0x00	; 0
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	40 e8       	ldi	r20, 0x80	; 128
 a6c:	5f eb       	ldi	r21, 0xBF	; 191
 a6e:	9f e3       	ldi	r25, 0x3F	; 63
 a70:	88 39       	cpi	r24, 0x98	; 152
 a72:	20 f0       	brcs	.+8      	; 0xa7c <log+0x3e>
 a74:	80 3e       	cpi	r24, 0xE0	; 224
 a76:	38 f0       	brcs	.+14     	; 0xa86 <log+0x48>
 a78:	21 96       	adiw	r28, 0x01	; 1
 a7a:	8f 77       	andi	r24, 0x7F	; 127
 a7c:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 a80:	e0 e9       	ldi	r30, 0x90	; 144
 a82:	f0 e0       	ldi	r31, 0x00	; 0
 a84:	04 c0       	rjmp	.+8      	; 0xa8e <log+0x50>
 a86:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 a8a:	ed eb       	ldi	r30, 0xBD	; 189
 a8c:	f0 e0       	ldi	r31, 0x00	; 0
 a8e:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_powser>
 a92:	8b 01       	movw	r16, r22
 a94:	be 01       	movw	r22, r28
 a96:	ec 01       	movw	r28, r24
 a98:	fb 2e       	mov	r15, r27
 a9a:	6f 57       	subi	r22, 0x7F	; 127
 a9c:	71 09       	sbc	r23, r1
 a9e:	75 95       	asr	r23
 aa0:	77 1f       	adc	r23, r23
 aa2:	88 0b       	sbc	r24, r24
 aa4:	99 0b       	sbc	r25, r25
 aa6:	0e 94 2b 03 	call	0x656	; 0x656 <__floatsisf>
 aaa:	28 e1       	ldi	r18, 0x18	; 24
 aac:	32 e7       	ldi	r19, 0x72	; 114
 aae:	41 e3       	ldi	r20, 0x31	; 49
 ab0:	5f e3       	ldi	r21, 0x3F	; 63
 ab2:	0e 94 ca 03 	call	0x794	; 0x794 <__mulsf3x>
 ab6:	af 2d       	mov	r26, r15
 ab8:	98 01       	movw	r18, r16
 aba:	ae 01       	movw	r20, r28
 abc:	ff 90       	pop	r15
 abe:	0f 91       	pop	r16
 ac0:	1f 91       	pop	r17
 ac2:	cf 91       	pop	r28
 ac4:	df 91       	pop	r29
 ac6:	0e 94 9e 02 	call	0x53c	; 0x53c <__addsf3x>
 aca:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_round>

00000ace <modf>:
 ace:	fa 01       	movw	r30, r20
 ad0:	dc 01       	movw	r26, r24
 ad2:	aa 0f       	add	r26, r26
 ad4:	bb 1f       	adc	r27, r27
 ad6:	9b 01       	movw	r18, r22
 ad8:	ac 01       	movw	r20, r24
 ada:	bf 57       	subi	r27, 0x7F	; 127
 adc:	28 f4       	brcc	.+10     	; 0xae8 <modf+0x1a>
 ade:	22 27       	eor	r18, r18
 ae0:	33 27       	eor	r19, r19
 ae2:	44 27       	eor	r20, r20
 ae4:	50 78       	andi	r21, 0x80	; 128
 ae6:	20 c0       	rjmp	.+64     	; 0xb28 <modf+0x5a>
 ae8:	b7 51       	subi	r27, 0x17	; 23
 aea:	90 f4       	brcc	.+36     	; 0xb10 <modf+0x42>
 aec:	ab 2f       	mov	r26, r27
 aee:	00 24       	eor	r0, r0
 af0:	46 95       	lsr	r20
 af2:	37 95       	ror	r19
 af4:	27 95       	ror	r18
 af6:	01 1c       	adc	r0, r1
 af8:	a3 95       	inc	r26
 afa:	d2 f3       	brmi	.-12     	; 0xaf0 <modf+0x22>
 afc:	00 20       	and	r0, r0
 afe:	71 f0       	breq	.+28     	; 0xb1c <modf+0x4e>
 b00:	22 0f       	add	r18, r18
 b02:	33 1f       	adc	r19, r19
 b04:	44 1f       	adc	r20, r20
 b06:	b3 95       	inc	r27
 b08:	da f3       	brmi	.-10     	; 0xb00 <modf+0x32>
 b0a:	0e d0       	rcall	.+28     	; 0xb28 <modf+0x5a>
 b0c:	0c 94 86 02 	jmp	0x50c	; 0x50c <__subsf3>
 b10:	61 30       	cpi	r22, 0x01	; 1
 b12:	71 05       	cpc	r23, r1
 b14:	a0 e8       	ldi	r26, 0x80	; 128
 b16:	8a 07       	cpc	r24, r26
 b18:	b9 46       	sbci	r27, 0x69	; 105
 b1a:	30 f4       	brcc	.+12     	; 0xb28 <modf+0x5a>
 b1c:	9b 01       	movw	r18, r22
 b1e:	ac 01       	movw	r20, r24
 b20:	66 27       	eor	r22, r22
 b22:	77 27       	eor	r23, r23
 b24:	88 27       	eor	r24, r24
 b26:	90 78       	andi	r25, 0x80	; 128
 b28:	30 96       	adiw	r30, 0x00	; 0
 b2a:	21 f0       	breq	.+8      	; 0xb34 <modf+0x66>
 b2c:	20 83       	st	Z, r18
 b2e:	31 83       	std	Z+1, r19	; 0x01
 b30:	42 83       	std	Z+2, r20	; 0x02
 b32:	53 83       	std	Z+3, r21	; 0x03
 b34:	08 95       	ret

00000b36 <__divsf3>:
 b36:	0e 94 af 05 	call	0xb5e	; 0xb5e <__divsf3x>
 b3a:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__fp_round>
 b3e:	0e 94 76 03 	call	0x6ec	; 0x6ec <__fp_pscB>
 b42:	58 f0       	brcs	.+22     	; 0xb5a <__divsf3+0x24>
 b44:	0e 94 6f 03 	call	0x6de	; 0x6de <__fp_pscA>
 b48:	40 f0       	brcs	.+16     	; 0xb5a <__divsf3+0x24>
 b4a:	29 f4       	brne	.+10     	; 0xb56 <__divsf3+0x20>
 b4c:	5f 3f       	cpi	r21, 0xFF	; 255
 b4e:	29 f0       	breq	.+10     	; 0xb5a <__divsf3+0x24>
 b50:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 b54:	51 11       	cpse	r21, r1
 b56:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>
 b5a:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_nan>

00000b5e <__divsf3x>:
 b5e:	0e 94 8e 03 	call	0x71c	; 0x71c <__fp_split3>
 b62:	68 f3       	brcs	.-38     	; 0xb3e <__divsf3+0x8>

00000b64 <__divsf3_pse>:
 b64:	99 23       	and	r25, r25
 b66:	b1 f3       	breq	.-20     	; 0xb54 <__divsf3+0x1e>
 b68:	55 23       	and	r21, r21
 b6a:	91 f3       	breq	.-28     	; 0xb50 <__divsf3+0x1a>
 b6c:	95 1b       	sub	r25, r21
 b6e:	55 0b       	sbc	r21, r21
 b70:	bb 27       	eor	r27, r27
 b72:	aa 27       	eor	r26, r26
 b74:	62 17       	cp	r22, r18
 b76:	73 07       	cpc	r23, r19
 b78:	84 07       	cpc	r24, r20
 b7a:	38 f0       	brcs	.+14     	; 0xb8a <__divsf3_pse+0x26>
 b7c:	9f 5f       	subi	r25, 0xFF	; 255
 b7e:	5f 4f       	sbci	r21, 0xFF	; 255
 b80:	22 0f       	add	r18, r18
 b82:	33 1f       	adc	r19, r19
 b84:	44 1f       	adc	r20, r20
 b86:	aa 1f       	adc	r26, r26
 b88:	a9 f3       	breq	.-22     	; 0xb74 <__divsf3_pse+0x10>
 b8a:	35 d0       	rcall	.+106    	; 0xbf6 <__divsf3_pse+0x92>
 b8c:	0e 2e       	mov	r0, r30
 b8e:	3a f0       	brmi	.+14     	; 0xb9e <__divsf3_pse+0x3a>
 b90:	e0 e8       	ldi	r30, 0x80	; 128
 b92:	32 d0       	rcall	.+100    	; 0xbf8 <__divsf3_pse+0x94>
 b94:	91 50       	subi	r25, 0x01	; 1
 b96:	50 40       	sbci	r21, 0x00	; 0
 b98:	e6 95       	lsr	r30
 b9a:	00 1c       	adc	r0, r0
 b9c:	ca f7       	brpl	.-14     	; 0xb90 <__divsf3_pse+0x2c>
 b9e:	2b d0       	rcall	.+86     	; 0xbf6 <__divsf3_pse+0x92>
 ba0:	fe 2f       	mov	r31, r30
 ba2:	29 d0       	rcall	.+82     	; 0xbf6 <__divsf3_pse+0x92>
 ba4:	66 0f       	add	r22, r22
 ba6:	77 1f       	adc	r23, r23
 ba8:	88 1f       	adc	r24, r24
 baa:	bb 1f       	adc	r27, r27
 bac:	26 17       	cp	r18, r22
 bae:	37 07       	cpc	r19, r23
 bb0:	48 07       	cpc	r20, r24
 bb2:	ab 07       	cpc	r26, r27
 bb4:	b0 e8       	ldi	r27, 0x80	; 128
 bb6:	09 f0       	breq	.+2      	; 0xbba <__divsf3_pse+0x56>
 bb8:	bb 0b       	sbc	r27, r27
 bba:	80 2d       	mov	r24, r0
 bbc:	bf 01       	movw	r22, r30
 bbe:	ff 27       	eor	r31, r31
 bc0:	93 58       	subi	r25, 0x83	; 131
 bc2:	5f 4f       	sbci	r21, 0xFF	; 255
 bc4:	3a f0       	brmi	.+14     	; 0xbd4 <__divsf3_pse+0x70>
 bc6:	9e 3f       	cpi	r25, 0xFE	; 254
 bc8:	51 05       	cpc	r21, r1
 bca:	78 f0       	brcs	.+30     	; 0xbea <__divsf3_pse+0x86>
 bcc:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_inf>
 bd0:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_szero>
 bd4:	5f 3f       	cpi	r21, 0xFF	; 255
 bd6:	e4 f3       	brlt	.-8      	; 0xbd0 <__divsf3_pse+0x6c>
 bd8:	98 3e       	cpi	r25, 0xE8	; 232
 bda:	d4 f3       	brlt	.-12     	; 0xbd0 <__divsf3_pse+0x6c>
 bdc:	86 95       	lsr	r24
 bde:	77 95       	ror	r23
 be0:	67 95       	ror	r22
 be2:	b7 95       	ror	r27
 be4:	f7 95       	ror	r31
 be6:	9f 5f       	subi	r25, 0xFF	; 255
 be8:	c9 f7       	brne	.-14     	; 0xbdc <__divsf3_pse+0x78>
 bea:	88 0f       	add	r24, r24
 bec:	91 1d       	adc	r25, r1
 bee:	96 95       	lsr	r25
 bf0:	87 95       	ror	r24
 bf2:	97 f9       	bld	r25, 7
 bf4:	08 95       	ret
 bf6:	e1 e0       	ldi	r30, 0x01	; 1
 bf8:	66 0f       	add	r22, r22
 bfa:	77 1f       	adc	r23, r23
 bfc:	88 1f       	adc	r24, r24
 bfe:	bb 1f       	adc	r27, r27
 c00:	62 17       	cp	r22, r18
 c02:	73 07       	cpc	r23, r19
 c04:	84 07       	cpc	r24, r20
 c06:	ba 07       	cpc	r27, r26
 c08:	20 f0       	brcs	.+8      	; 0xc12 <__divsf3_pse+0xae>
 c0a:	62 1b       	sub	r22, r18
 c0c:	73 0b       	sbc	r23, r19
 c0e:	84 0b       	sbc	r24, r20
 c10:	ba 0b       	sbc	r27, r26
 c12:	ee 1f       	adc	r30, r30
 c14:	88 f7       	brcc	.-30     	; 0xbf8 <__divsf3_pse+0x94>
 c16:	e0 95       	com	r30
 c18:	08 95       	ret

00000c1a <__fp_mpack>:
 c1a:	9f 3f       	cpi	r25, 0xFF	; 255
 c1c:	31 f0       	breq	.+12     	; 0xc2a <__fp_mpack_finite+0xc>

00000c1e <__fp_mpack_finite>:
 c1e:	91 50       	subi	r25, 0x01	; 1
 c20:	20 f4       	brcc	.+8      	; 0xc2a <__fp_mpack_finite+0xc>
 c22:	87 95       	ror	r24
 c24:	77 95       	ror	r23
 c26:	67 95       	ror	r22
 c28:	b7 95       	ror	r27
 c2a:	88 0f       	add	r24, r24
 c2c:	91 1d       	adc	r25, r1
 c2e:	96 95       	lsr	r25
 c30:	87 95       	ror	r24
 c32:	97 f9       	bld	r25, 7
 c34:	08 95       	ret

00000c36 <_exit>:
 c36:	f8 94       	cli

00000c38 <__stop_program>:
 c38:	ff cf       	rjmp	.-2      	; 0xc38 <__stop_program>
